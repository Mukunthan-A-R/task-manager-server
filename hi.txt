CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    email VARCHAR(255) UNIQUE,
    role VARCHAR(50)
);


-- Create the 'projects' table with the necessary columns and schema
CREATE TABLE projects (
    project_id SERIAL PRIMARY KEY,               -- Auto-incrementing primary key for the project
    name VARCHAR(255) NOT NULL,                  -- Name of the project (string, not null)
    description TEXT,                            -- Detailed description of the project
    start_date DATE,                             -- Start date of the project
    end_date DATE,                               -- End date of the project
    status VARCHAR(50),                          -- Status of the project (e.g., 'active', 'completed')
    priority VARCHAR(50),                        -- Priority of the project (e.g., 'low', 'medium', 'high')
    created INT REFERENCES users(user_id)       -- Foreign key referencing the 'users' table (user_id)
);


CREATE TABLE tasks (
    task_id SERIAL PRIMARY KEY,                -- Auto-incrementing primary key for each task
    project_id INT REFERENCES projects(project_id) ON DELETE CASCADE,  -- Foreign key to the 'projects' table
    title VARCHAR(255) NOT NULL,               -- Title of the task
    description TEXT,                                 -- Description of the task
    status VARCHAR(50),                        -- Status of the task (e.g., 'not started', 'in progress', 'completed')
    time_duration INT,                         -- Time duration of the task in hours or minutes
    start_date DATE,                           -- Start date of the task
    end_date DATE,                             -- End date of the task
    created_date DATE DEFAULT CURRENT_DATE     -- Date when the task was created (defaults to current date)
);